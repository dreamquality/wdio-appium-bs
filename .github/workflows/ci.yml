name: CI Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  lint-and-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        env:
          APPIUM_SKIP_CHROMEDRIVER_INSTALL: 1

      - name: TypeScript type check
        run: npx tsc --noEmit

  test-browserstack-android:
    name: BrowserStack Android Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: lint-and-typecheck
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        env:
          APPIUM_SKIP_CHROMEDRIVER_INSTALL: 1

      - name: Verify Appium installation
        run: |
          npx appium --version
          npx appium driver list

      - name: Create .env file for BrowserStack
        run: |
          echo "BROWSERSTACK_USERNAME=${{ secrets.BROWSERSTACK_USERNAME }}" >> .env
          echo "BROWSERSTACK_ACCESS_KEY=${{ secrets.BROWSERSTACK_ACCESS_KEY }}" >> .env
          echo "BROWSERSTACK_ANDROID_APP_ID=${{ secrets.BROWSERSTACK_ANDROID_APP_ID }}" >> .env
          echo "BROWSERSTACK_IOS_APP_ID=${{ secrets.BROWSERSTACK_IOS_APP_ID }}" >> .env

      - name: Run Android tests on BrowserStack
        run: npm run test:android:bs
        continue-on-error: true

      - name: Generate Allure Report
        if: always()
        run: npm run allure:generate
        continue-on-error: true

      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-android
          path: allure-report/
          retention-days: 30

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-android
          path: reporters/
          retention-days: 30

  test-browserstack-ios:
    name: BrowserStack iOS Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: lint-and-typecheck
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        env:
          APPIUM_SKIP_CHROMEDRIVER_INSTALL: 1

      - name: Verify Appium installation
        run: |
          npx appium --version
          npx appium driver list

      - name: Create .env file for BrowserStack
        run: |
          echo "BROWSERSTACK_USERNAME=${{ secrets.BROWSERSTACK_USERNAME }}" >> .env
          echo "BROWSERSTACK_ACCESS_KEY=${{ secrets.BROWSERSTACK_ACCESS_KEY }}" >> .env
          echo "BROWSERSTACK_ANDROID_APP_ID=${{ secrets.BROWSERSTACK_ANDROID_APP_ID }}" >> .env
          echo "BROWSERSTACK_IOS_APP_ID=${{ secrets.BROWSERSTACK_IOS_APP_ID }}" >> .env

      - name: Run iOS tests on BrowserStack
        run: npm run test:ios:bs
        continue-on-error: true

      - name: Generate Allure Report
        if: always()
        run: npm run allure:generate
        continue-on-error: true

      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-ios
          path: allure-report/
          retention-days: 30

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-ios
          path: reporters/
          retention-days: 30

  publish-reports:
    name: Publish Test Reports
    runs-on: ubuntu-latest
    needs: [test-browserstack-android, test-browserstack-ios]
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Android Allure Report
        uses: actions/download-artifact@v4
        with:
          name: allure-report-android
          path: allure-report-android/
        continue-on-error: true

      - name: Download iOS Allure Report
        uses: actions/download-artifact@v4
        with:
          name: allure-report-ios
          path: allure-report-ios/
        continue-on-error: true

      - name: Merge reports
        run: |
          mkdir -p allure-report-combined
          if [ -d "allure-report-android" ]; then
            cp -r allure-report-android/* allure-report-combined/ 2>/dev/null || true
          fi
          if [ -d "allure-report-ios" ]; then
            cp -r allure-report-ios/* allure-report-combined/ 2>/dev/null || true
          fi

      - name: Deploy report to Github Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-report-combined
          destination_dir: test-reports
        continue-on-error: true
